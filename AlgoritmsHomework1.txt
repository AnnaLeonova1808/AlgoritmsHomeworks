package basic.Algorotms;
import java.util.Scanner;
/*1) Что такое алгоритм (можно своими словами)
Алгоритм - набор действий, приводящих к достижению желаемого результата.Алгоритм это последовательность конечных шагов для выполнения конкретной проблемы/задачи (могут быть простыми и сложными).
 - Ясность и недвусмысленность.
- Четко определенные входные данные.
- Четко определенный результат.
- Конечность (алгоритм должен выполняться, должно быть конечное время выполнения).
- Выполнимый (должна быть возможность запрограммировать, он должен быть выполнимый).
- Независимый от языка (от языка программирования).
3) Какие основные способы описания алгоритма существуют?
- Текстовый - расписываются щаги алгоритма последовательно в тексте.
- Алгоритмический язык - псевдокод.
- Графический способ - изображается в виде блок-схем.
4) Какие факторы учитываются при построении алгоритма? В чем они измеряются? Опишите алгоритм и напишите код для следующих задач (сделайте оценку сколько потребовалось памяти и времени):
- Фактор времени - время измеряется путем подсчета количества ключевых операций.Time Complexity
- Фактор пространства - пространство измеряется путем подсчета максимального объема памяти, требуемого алгоритмом. Space Complexity
5) Дан массив из 10 чисел (заполните любыми числами в промежутке от -100 до 100), необходимо найти сумму всех положительных чисел
 */
public class HomeworkAlgoritms1 {

    public static void main(String[] args) {
        int[] numbers = {-99, -80, -26, 15, 28, 39, 62, 75, 81, 100};

        int sum = 0;
        for (int number : numbers) {
            if (number > 0) {
                sum += number;
            }
        }

        System.out.println("Сумма всех положительных чисел: " + sum);
    }


    /*  5.1. Принять числа и массив из 10-ти чисел.
        5.2. Пройтись по всем числам массива.
        5.3. Если число > 0, то добавить к переменной sum.
        5.4. Вывести значение переменной sum.
         */
    /*  6) Дан массив из 10 чисел, найдите средне-арифмитическое всех чисел */
    public static void main2(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

        int sum = 0;
        for (int number : numbers) {
            sum += number;
        }

        double average = (double) sum / numbers.length;

        System.out.println("Среднее арифметическое: " + average);
    }
   /*  6.1. Принять числа и массив из 10-ти чисел.
    6.2. Пройтись по всем числам массива.
    6.3. Добавить все числа к переменной sum.
    6.4. Значение переменной sum разделить на количество переменных.
    6.5. Получить среднее арифметическое всех чисел.

    Время выполнения алгоритма будет пропорционально количеству элементов в массиве, то есть время выполнения будет постоянным.

 */


    /* Уровень 2
    Напишите алгоритм и код к следующей задаче

    Даны переменные:
    деньги которые у нас есть - 1000 рублей
    стоимость пиццы - 230 рублей
    стоимость жвачки - 26 рублей
    стоимость конфеты - 2,5 рубля Задача: представим себе что мы зашли в магазин, и наша задача: купить максимум возможных пиц, затем на сдачу купить максимум жвачек, затем на оставшуюся сдачу купить конфет. В результате нам нужно сделать математический просчет и вывести на консоль примерно вот такую информацию: На эти деньги мы можем купить:
    4 пиццы
    3 жвачки
    0 конфет Сдача с магазина: 2 рубля.
     */
    public static void main3(String[] args) {
        int amountMoney = 1000;
        int pizzaCost = 230;
        int gumCost = 26;
        double candyCost = 2.5;

        int pizzasCount = amountMoney / pizzaCost;
        int remainingMoney = amountMoney % pizzaCost;

        int gumCount = remainingMoney / gumCost;
        remainingMoney %= gumCost;

        int candyCount = (int) (remainingMoney / candyCost);
        remainingMoney %= candyCost;

        System.out.println("На сумму деньг мы можем купить:");
        System.out.println(pizzasCount + " пиццы");
        System.out.println(gumCount + " жвачки");
        System.out.println(candyCount + " конфет");

        System.out.println("Сдача с магазина: " + remainingMoney + " рубля.");
    }
    /* 1. Создать переменные для денег, стоимости пиццы, жвачки и конфет.
2. Вычислить максимальное количество пицц, которое можно купить, путем деления суммы деньг на стоимость пиццы.
3. Вычислить остаток денег после покупки максимального количества пицц.
4. Вычислить максимальное количество жвачек, которое можно купить, путем деления суммы деньг на стоимость жвачки.
5. Вычислить остаток денег после покупки максимального количества жвачек.
6. Вычисть максимальное количество конфет, которое можно купить, путем деления суммы деньг на стоимость конфет.
7. Вычислить остаток денег после покупки максимального количества конфет.
8. Вывести на консоль количество покупки пицц, жвачек, конфет и сумму сдачи в магазине.


    /* Вводится три числа, необходимо проверить является ли он треугольником (сумма любых двух сторон треугольника больше третьей) */
    public static void main4(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Введите длины трех сторон треугольника:");

        int side1 = scanner.nextInt();
        int side2 = scanner.nextInt();
        int side3 = scanner.nextInt();

        boolean isTriangle = checkTriangle(side1, side2, side3);

        if (isTriangle) {
            System.out.println("Введенные числа являются сторонами треугольника.");
        } else {
            System.out.println("Введенные числа не образуют треугольника.");
        }
    }

    public static boolean checkTriangle(int side1, int side2, int side3) {
        boolean condition1 = (side1 + side2 > side3);
        boolean condition2 = (side2 + side3 > side1);
        boolean condition3 = (side3 + side1 > side2);

        return condition1 && condition2 && condition3;
    }
}
/* 1. Принять значение длины сторон треугольника.
    2.Проверка значения суммы любых двух сторон треугольника должна быть больше третьей стороны.
    3. Проверка значения каждой  трех возможных комбинаций двух сторон должна удовлетворять этому условию.
    4. Если все три условия выполняются, то введенные числа являются сторонами треугольника.
    5. Иначе, заданные значения не образуют стороны треугольника.*/
